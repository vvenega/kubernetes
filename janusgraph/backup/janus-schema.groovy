def defineSchema(graph) {
     
     mgmt = graph.openManagement()
     

     if (! mgmt.containsPropertyKey("ownerusername")) mgmt.makePropertyKey("ownerusername").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("nameowner")) mgmt.makePropertyKey("nameowner").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("product")) mgmt.makePropertyKey("product").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("shortdescription")) mgmt.makePropertyKey("shortdescription").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("thumbnailimage")) mgmt.makePropertyKey("thumbnailimage").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("saleprice")) mgmt.makePropertyKey("saleprice").dataType(Double.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("image")) mgmt.makePropertyKey("image").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("salepricerange")) mgmt.makePropertyKey("salepricerange").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("longdescription")) mgmt.makePropertyKey("longdescription").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("views")) mgmt.makePropertyKey("views").dataType(Integer.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("overview")) mgmt.makePropertyKey("overview").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("quantity")) mgmt.makePropertyKey("quantity").dataType(Integer.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("objectid")) mgmt.makePropertyKey("objectid").dataType(Long.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("sold")) mgmt.makePropertyKey("sold").dataType(Boolean.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("datesold")) mgmt.makePropertyKey("datesold").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("username")) mgmt.makePropertyKey("username").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("pwd"))  mgmt.makePropertyKey("pwd").dataType(String.class).cardinality(Cardinality.single).make()
     if (! mgmt.containsPropertyKey("name")) mgmt.makePropertyKey("name").dataType(String.class).cardinality(Cardinality.single).make()

     if(!mgmt.containsVertexLabel("Listing")) mgmt.makeVertexLabel("Listing").make()
     if(!mgmt.containsVertexLabel("User")) mgmt.makeVertexLabel("User").make()
     if(!mgmt.containsVertexLabel("Category")) mgmt.makeVertexLabel("Category").make()
     if(!mgmt.containsVertexLabel("Organization")) mgmt.makeVertexLabel("Organization").make()
     if(!mgmt.containsVertexLabel("Type")) mgmt.makeVertexLabel("Type").make()
     if(!mgmt.containsVertexLabel("Manufacturer")) mgmt.makeVertexLabel("Manufacturer").make()
     if(!mgmt.containsVertexLabel("Ecommunity")) mgmt.makeVertexLabel("Ecommunity").make()
     if(!mgmt.containsVertexLabel("Role")) mgmt.makeVertexLabel("Role").make()
     if(!mgmt.containsVertexLabel("Image")) mgmt.makeVertexLabel("Image").make()

     if(!mgmt.containsEdgeLabel("belongsto")) mgmt.makeEdgeLabel("belongsto").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("isfrom")) mgmt.makeEdgeLabel("isfrom").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("post")) mgmt.makeEdgeLabel("post").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("createon")) mgmt.makeEdgeLabel("createon").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("manufacturedby")) mgmt.makeEdgeLabel("manufacturedby").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("istype")) mgmt.makeEdgeLabel("istype").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("iscategory")) mgmt.makeEdgeLabel("iscategory").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("iscommunity")) mgmt.makeEdgeLabel("iscommunity").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("isrole")) mgmt.makeEdgeLabel("isrole").multiplicity(MULTI).make()
     if(!mgmt.containsEdgeLabel("shared")) mgmt.makeEdgeLabel("shared").multiplicity(MULTI).make()

     objectid = mgmt.getPropertyKey("objectid")
     price = mgmt.getPropertyKey("saleprice")
     owner = mgmt.getPropertyKey("nameowner")
     pricerange = mgmt.getPropertyKey("salepricerange")
     username = mgmt.getPropertyKey("username")
     name = mgmt.getPropertyKey("name")

     listing = mgmt.getVertexLabel("Listing")
     user = mgmt.getVertexLabel("User")
     category = mgmt.getVertexLabel("Category")
     organization = mgmt.getVertexLabel("Organization")
     type = mgmt.getVertexLabel("Type")
     manufacturer = mgmt.getVertexLabel("Manufacturer")
     ecommunity = mgmt.getVertexLabel("Ecommunity")
     role = mgmt.getVertexLabel("Role")
     image = mgmt.getVertexLabel("Image")

     
     mgmt.buildIndex("listing_by_objectid", Vertex.class).addKey(objectid).indexOnly(listing).buildCompositeIndex()
     mgmt.buildIndex("listing_by_pricerange_price_owner",   Vertex.class).addKey(pricerange).addKey(price).addKey(owner).indexOnly(listing).buildCompositeIndex()
     mgmt.buildIndex("listing_by_username", Vertex.class).addKey(username).indexOnly(listing).buildCompositeIndex()
     mgmt.buildIndex("user_by_username", Vertex.class).addKey(username).indexOnly(user).buildCompositeIndex()
     mgmt.buildIndex("category_by_name", Vertex.class).addKey(name).indexOnly(category).buildCompositeIndex()
     mgmt.buildIndex("organization_by_name", Vertex.class).addKey(name).indexOnly(organization).buildCompositeIndex()
     mgmt.buildIndex("type_by_name", Vertex.class).addKey(name).indexOnly(type).buildCompositeIndex()
     mgmt.buildIndex("manufacturer_by_name", Vertex.class).addKey(name).indexOnly(manufacturer).buildCompositeIndex()
     mgmt.buildIndex("ecommunity_by_name", Vertex.class).addKey(name).indexOnly(ecommunity).buildCompositeIndex()
     mgmt.buildIndex("role_by_name", Vertex.class).addKey(name).indexOnly(role).buildCompositeIndex()
     mgmt.buildIndex("image_by_name", Vertex.class).addKey(name).indexOnly(image).buildCompositeIndex()


     mgmt.commit()
 }
