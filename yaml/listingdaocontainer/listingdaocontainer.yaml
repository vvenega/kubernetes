apiVersion: v1
data:
  config.properties: |-
    KAFKA=http://KAFKA-SERVICE
    FILE_DAO=http://FILEUPLOAD-SERVICE-DAO
    DAO=http://LISTINGS-SERVICE-DAO
    PATH_DIRECTORY=/usr/ecommunities/myfiles/data/
kind: ConfigMap
metadata:
  creationTimestamp: "2021-06-28T16:38:53Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:binaryData:
        .: {}
        f:.DS_Store: {}
      f:data:
        .: {}
        f:config.properties: {}
    manager: kubectl-create
    operation: Update
    time: "2021-06-28T16:38:53Z"
  name: configmapfus
  namespace: default
  resourceVersion: "457597"
  uid: 91b26d2c-b492-40d6-9dbb-d03b625bdb69
---
apiVersion: v1
data:
  config.properties: |+
    CASSANDRA_SERVER=10.245.240.148
    CASSANDRA_PORT=9042
    CASSANDRA_USER=admin
    CASSANDRA_PWD=P@5590.78jh!
    NAMESPACE=circulareconomy.
    PATH_DIRECTORY=/usr/ecommunities/myfiles/data/
kind: ConfigMap
metadata:
  creationTimestamp: "2021-06-28T16:29:46Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:binaryData:
        .: {}
        f:.DS_Store: {}
      f:data:
        .: {}
        f:config.properties: {}
    manager: kubectl-create
    operation: Update
    time: "2021-06-28T16:29:46Z"
  name: configmapfusd
  namespace: default
  resourceVersion: "456376"
  uid: f4aeb566-6080-42fc-9b1d-77f34a43850b
---
apiVersion: v1
data:
  config.properties: |+
    CASSANDRA_SERVER=10.245.240.148
    CASSANDRA_PORT=9042
    CASSANDRA_USER=admin
    CASSANDRA_PWD=P@5590.78jh!
    NAMESPACE=circulareconomy.
    REDIS_SERVER=10.245.166.180
    PATH_DIRECTORY=/usr/ecommunities/myfiles/data/

  remote-graph_lsd.properties: |-
    gremlin.remote.remoteConnectionClass=org.apache.tinkerpop.gremlin.driver.remote.DriverRemoteConnection
    gremlin.remote.driver.clusterFile=/msconf/remote-objects.yaml
    gremlin.remote.driver.sourceName=g
  remote-objects_lsd.yaml: "hosts: [10.245.55.25]\nport: 8182\nserializer:
    { \n    className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0,\n
    \   config: { ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry]
    }}"
kind: ConfigMap
metadata:
  creationTimestamp: "2021-06-28T16:30:26Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:config.properties: {}
        f:remote-graph_lsd.properties: {}
        f:remote-objects_lsd.yaml: {}
    manager: kubectl-create
    operation: Update
    time: "2021-06-28T16:30:26Z"
  name: configmaplsd
  namespace: default
  resourceVersion: "456467"
  uid: 5a2eb705-9992-46b3-aadd-eebed6e28623
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: listingdaocontainer
  name: listingdaocontainer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: listingdaocontainer
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: listingdaocontainer
    spec:
      containers:
      - image: vvenega/listingservicedao:latest
        name: listingservicedao
        volumeMounts:
        - name: config-volume-lsd
          mountPath: /msconf
        - mountPath: "/usr/ecommunities/myfiles/data"
          name: shared-storage
        resources:
         limits:
           memory: 256Mi

      - image: vvenega/fileuploadservicedao:latest
        name: fileuploadservicedao
        volumeMounts:
        - name: config-volume-fusd
          mountPath: /msconf
        - mountPath: "/usr/ecommunities/myfiles/data"
          name: shared-storage
        resources:
         limits:
           memory: 256Mi

      - image: vvenega/fileuploadservice:latest
        name: fileuploadservice
        volumeMounts:
        - name: config-volume-fus
          mountPath: /msconf
        - mountPath: "/usr/ecommunities/myfiles/data"
          name: shared-storage
        resources:
         limits:
           memory: 256Mi
      volumes:
      - name: config-volume-fus
        configMap:
          name: configmapfus
      - name: config-volume-fusd
        configMap:
          name: configmapfusd
      - name: config-volume-lsd
        configMap:
          name: configmaplsd
      - name: shared-storage
        persistentVolumeClaim:
         claimName: listingdaocontainer-pvclaim-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: listingservicedao
  name: listingservicedao
spec:
  ports:
  - name: 8001-8001
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: listingservicedao
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: fileuploadservicedao
  name: fileuploadservicedao
spec:
  ports:
  - name: 8105-8105
    port: 8105
    protocol: TCP
    targetPort: 8105
  selector:
    app: fileuploadservicedao
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: fileuploadservice
  name: fileuploadservice
spec:
  ports:
  - name: 8102-8102
    port: 8102
    protocol: TCP
    targetPort: 8102
  selector:
    app: fileuploadservice
  type: ClusterIP
status:
  loadBalancer: {}
