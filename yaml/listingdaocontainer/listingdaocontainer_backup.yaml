apiVersion: v1
data:
  config_fus.properties: |-
    KAFKA=http://KAFKA-SERVICE
    FILE_DAO=http://FILEUPLOAD-SERVICE-DAO
    DAO=http://LISTINGS-SERVICE-DAO
    PATH_DIRECTORY=/users/victorvenegas/desktop/testupload/
  config_fusd.properties: |
    CASSANDRA_SERVER=127.0.0.1
    CASSANDRA_PORT=9042
    CASSANDRA_USER=cassandra
    CASSANDRA_PWD=cassandra
    NAMESPACE=circulareconomy.
    PATH_DIRECTORY=/users/victorvenegas/desktop/testupload/
  config_lsd.properties: |+
    #CASSANDRA_SERVER=127.0.0.1
    CASSANDRA_SERVER=10.245.240.148
    CASSANDRA_PORT=9042
    CASSANDRA_USER=cassandra
    CASSANDRA_PWD=cassandra
    NAMESPACE=circulareconomy.
    #REDIS_SERVER=localhost
    REDIS_SERVER=10.245.166.180
    PATH_DIRECTORY=/users/victorvenegas/desktop/testupload/

  remote-graph.properties: |-
    gremlin.remote.remoteConnectionClass=org.apache.tinkerpop.gremlin.driver.remote.DriverRemoteConnection
    #gremlin.remote.driver.clusterFile=remote-objects.yaml
    gremlin.remote.driver.clusterFile=/msconf/remote-objects.yaml
    gremlin.remote.driver.sourceName=g
  remote-objects.yaml: "#hosts: [localhost]\nhosts: [10.245.55.25]\nport: 8182\nserializer:
    { \n    className: org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0,\n
    \   config: { ioRegistries: [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry]
    }}"
kind: ConfigMap
metadata:
  creationTimestamp: "2021-06-28T12:25:36Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:config_fus.properties: {}
        f:config_fusd.properties: {}
        f:config_lsd.properties: {}
        f:remote-graph.properties: {}
        f:remote-objects.yaml: {}
    manager: kubectl-create
    operation: Update
    time: "2021-06-28T12:25:36Z"
  name: listingdaocontainer
  namespace: default
  resourceVersion: "423921"
  uid: 280d5b12-e64e-4897-abbc-32d143b4f6ca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: listingdaocontainer
  name: listingdaocontainer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: listingdaocontainer
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: listingdaocontainer
    spec:
      containers:
      - image: vvenega/listingservicedao:latest
        name: listingservicedao
        volumeMounts:
        - name: config-volume
          mountPath: /msconf
        resources:
         limits:
           memory: 256Mi

      - image: vvenega/fileuploadservicedao:latest
        name: fileuploadservicedao
        volumeMounts:
        - name: config-volume
          mountPath: /msconf
        resources:
         limits:
           memory: 256Mi

      - image: vvenega/fileuploadservice:latest
        name: fileuploadservice
        volumeMounts:
        - name: config-volume
          mountPath: /msconf
        resources:
         limits:
           memory: 256Mi
      volumes:
      - name: config-volume
        configMap:
          name: remoteobjects
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: listingservicedao
  name: listingservicedao
spec:
  ports:
  - name: 8001-8001
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: listingservicedao
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: fileuploadservicedao
  name: fileuploadservicedao
spec:
  ports:
  - name: 8105-8105
    port: 8105
    protocol: TCP
    targetPort: 8105
  selector:
    app: fileuploadservicedao
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: fileuploadservice
  name: fileuploadservice
spec:
  ports:
  - name: 8102-8102
    port: 8102
    protocol: TCP
    targetPort: 8102
  selector:
    app: fileuploadservice
  type: ClusterIP
status:
  loadBalancer: {}
